services:
  # Servicio de la Base de Datos (PostgreSQL)
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Servicio del Trainer de la Cloud (para el modelo genérico)
  cloud_trainer:
    build:
      context: .
      dockerfile: ./cloud_node/Dockerfile
    environment:
      RETRAIN_INTERVAL_HOURS: ${RETRAIN_INTERVAL_HOURS} 
    volumes:
      - ./data/models:/app/data/models 
    command: python -m scripts.run_cloud_trainer_init_and_loop
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/data/models/generic_activity_model.pkl"]
      interval: 10s
      timeout: 5s
      retries: 50
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy

  # Servicio del Nodo Edge
  edge_service:
    build:
      context: .
      dockerfile: ./edge_node/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data/models:/app/data/models
    environment:
      EDGE_NODE_ID: "edge_node_instance_1"
    depends_on:
      cloud_trainer:
        condition: service_healthy
      db:
        condition: service_healthy

  # Servicio del Trainer del Fog
  fog_trainer:
    build:
      context: .
      dockerfile: ./fog_node/Dockerfile
    volumes:
      # Si el fog_trainer también necesita acceso a los modelos entrenados,
      # debe mapear la misma carpeta que el cloud_trainer.
      - ./data/models:/app/data/models
      # Si fog_trainer usa otros datos dentro de /app/data que no sean modelos,
      # considera un volumen específico.
    command: python fog_node/trainer.py
    depends_on:
      cloud_trainer:
        condition: service_healthy
      db:
        condition: service_healthy

volumes:
  db_data: # Este es para los datos persistentes de la base de datos PostgreSQL